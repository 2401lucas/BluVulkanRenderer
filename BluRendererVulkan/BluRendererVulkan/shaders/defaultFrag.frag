#version 450#extension GL_EXT_nonuniform_qualifier : enablelayout(set = 1, binding = 0) uniform sampler2D[] textureSamplers;struct LightInfo {	vec4 position;	//XYZ for position, W for light type	vec4 rotation;	//XYZ  for rotation	vec4 colour;	//XYZ for RGB, W for Intensity	vec4 distInfo;	// X for Const, Y for Linear, Z for Quad, W for Spot Light cutoff angle};layout(set = 0, binding = 0) uniform GPUSceneData {	vec4 cameraPosition;	//XYZ for position, W for number of Lights	vec4 ambientColor;		//XYZ for RGB, W for Intensity	LightInfo[16] lights;} sceneData;layout(location = 0) in vec3 fragColour;layout(location = 1) in vec3 fragNormal;layout(location = 2) in vec3 fragPosition;layout(location = 3) in vec3 fragTexCoord;layout(location = 0) out vec4 outColour;void main() {	outColour = texture(textureSamplers[int(fragTexCoord.z)], fragTexCoord.xy);}