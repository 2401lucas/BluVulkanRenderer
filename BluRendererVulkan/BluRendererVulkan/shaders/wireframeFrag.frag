#version 450#extension GL_EXT_fragment_shader_barycentric  : requirelayout(location = 0) in vec3 fragColour;layout(location = 1) in vec3 fragNormal;layout(location = 2) in vec3 fragPosition;layout(location = 3) in vec2 fragTexCoord;layout(location = 0) out vec4 outColour;//TODO: Outer lines are rendered at half widthvoid main() {	const vec3 BaryCoord = gl_BaryCoordEXT;	// The horizontal and vertical change in barycentric coordinates	// in screen-space	const vec3 dBaryCoordX = dFdx(BaryCoord);	const vec3 dBaryCoordY = dFdy(BaryCoord);	// `fwidth` gets the manhattan distance of the barycentric coordinates.	// what you want instead is the euclidean distance	const vec3 dBaryCoord  = sqrt(dBaryCoordX*dBaryCoordX + dBaryCoordY*dBaryCoordY);	const float Thickness = 2.0; // In pixels	const float Falloff = 5.0;   // In pixels	const vec3 Remap = smoothstep(		dBaryCoord * Thickness,		dBaryCoord * (Thickness + Falloff),		BaryCoord	);	// Get the closest edge	const float Wireframe = min(Remap.x, min(Remap.y, Remap.z));	outColour = vec4(Wireframe.xxx, 1.0);}