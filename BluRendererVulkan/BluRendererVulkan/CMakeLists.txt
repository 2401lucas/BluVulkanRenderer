# CMakeList.txt : CMake project for BluRendererVulkan, include source and define
# project specific logic here.
cmake_minimum_required(VERSION 3.11)

set(ENV{VULKAN_SDK} "C:/VulkanSDK/1.3.261.1")
find_package(Vulkan)
find_package(glfw3 CONFIG REQUIRED)

# Add source to this project's executable.
add_executable (BluRendererVulkan ${src_files} ${include_files} "src/BluRendererVulkan.cpp"  "src/Engine/FileManagement/FileManager.cpp" "src/Engine/FileManagement/FileManager.h" "src/Render/Window/WindowManager.cpp" "src/Render/Window/WindowManager.h" "src/Render/VkInstance/VulkanInstance.cpp" "src/Render/VkInstance/VulkanInstance.h" "src/Engine/Scene/Scene.h"   "src/Render/Image/Image.h" "src/Render/Image/Image.cpp" "src/Render/Device/Device.h" "src/Render/Device/Device.cpp" "include/Settings/VkLayerConfig.h" "src/Render/Swapchain/Swapchain.h" "src/Render/Swapchain/Swapchain.cpp" "src/Render/Renderer/RenderManager.cpp" "src/Render/Renderer/RenderManager.h" "src/Render/Command/CommandPool.h" "src/Render/Command/CommandPool.cpp" "src/Render/RenderPass/RenderPass.h" "src/Render/RenderPass/RenderPass.cpp" "src/Render/Descriptors/Descriptor.h"  "src/Render/Descriptors/Types/UBO/UBO.h" "src/Render/Descriptors/Types/UBO/UBO.cpp" "src/Render/Buffer/Buffer.h" "src/Render/Buffer/Buffer.cpp" "src/Render/Descriptors/Descriptor.cpp" "src/Render/Pipeline/Pipeline.h" "src/Render/Pipeline/Pipeline.cpp" "src/Render/Pipeline/GraphicsPipeline.h" "src/Render/Pipeline/GraphicsPipeline.cpp"   "src/Render/Descriptors/DescriptorPool.h" "src/Render/Descriptors/DescriptorPool.cpp"   "src/BluRendererVulkan.h" "include/RenderConst.h"   "src/Engine/Scene/Scene.cpp"  "src/Render/Math/MathUtils.cpp" "src/Render/Descriptors/Types/PushConsts/PushConst.h" "src/Engine/EngineCore/EngineCore.h" "src/Engine/EngineCore/EngineCore.cpp" "src/Engine/Input/Input.h" "src/Engine/Input/Input.cpp" "src/Render/RenderPass/RenderPassUtils.h" "src/Render/RenderPass/RenderPassUtils.cpp" "src/Render/Descriptors/DescriptorUtils.h" "src/Render/Descriptors/DescriptorUtils.cpp" "src/Render/Buffer/BufferManager.h" "src/Render/Buffer/BufferManager.cpp" "src/Render/Buffer/MappedBufferManager.h" "src/Render/Buffer/MappedBufferManager.cpp"  "src/Render/Image/ImageUtils.h" "src/Render/Image/ImageUtils.cpp"   "src/Render/Buffer/ModelBufferManager.h" "src/Render/Buffer/ModelBufferManager.cpp" "src/Engine/Mesh/MeshUtils.h" "src/Engine/Mesh/MeshUtils.cpp" "src/Render/Textures/TextureManager.cpp" "src/Render/Textures/TextureManager.h" "src/engine/Entity/Components/TransformComponent.h"   "src/engine/Entity/Components/MeshRendererComponent.h"  "src/engine/Entity/Components/ScriptComponent.h"   "src/engine/Entity/Components/LightComponent.h"   "src/engine/Entity/Components/InputComponent.h" "src/engine/Entity/Components/MaterialComponent.h"   "src/Engine/Entity/Components/ComponentManager.h"  "src/Engine/Entity/Entity.h" "src/Engine/Entity/EntityArchetypes.h" "src/Engine/Entity/EntityArchetypes.cpp"  "src/Engine/Entity/EntityChunk/EntityChunk.h" "src/Engine/Entity/EntityChunk/EntityChunkManager.h" "src/Engine/Entity/EntityChunk/EntityChunkManager.cpp" "src/Engine/Entity/EntityChunk/EntityChunk.cpp" "src/Engine/Entity/Components/EntityComponent.h" "src/Engine/Entity/EntityManager.h" "src/Engine/Entity/EntityManager.cpp" "src/Engine/Entity/Systems/RendererSystem.h" "src/Engine/Entity/Systems/RendererSystem.cpp" "src/Render/Renderer/RenderModelData.h" "src/Render/Renderer/RenderLightData.h" "src/Render/Renderer/RenderSceneData.h" "src/Render/Renderer/RenderCameraData.h" "src/Engine/Entity/Components/CameraComponent.h" "src/Engine/Entity/Systems/CameraSystem.h" "src/Engine/Entity/Systems/CameraSystem.cpp" "src/Engine/Entity/Systems/LightSystem.h" "src/Engine/Entity/Systems/LightSystem.cpp" "src/Engine/Entity/Components/BaseComponent.h"   "src/Render/Buffer/BufferAllocator.h" "src/Render/Buffer/BufferAllocator.cpp" "src/Render/Renderer/RenderMeshCreateData.h"   "src/Engine/Scene/SceneManager.h" "src/Engine/Scene/SceneManager.cpp"  "src/Render/Pipeline/ComputePipeline.h" "src/Render/Pipeline/ComputePipeline.cpp"    "src/Render/Buffer/ComputeBufferManager.h" "src/Render/Buffer/ComputeBufferManager.cpp" "src/Render/Renderer/BaseRenderer.h" "src/Render/Renderer/BaseRenderer.cpp" "src/Render/Renderer/DefaultRenderer.h" "src/Render/Renderer/DefaultRenderer.cpp" "src/Render/Buffer/MeshBufferManager.h" "src/Render/Buffer/MeshBufferManager.cpp")

target_include_directories(BluRendererVulkan PRIVATE source_dir, include_dir)
target_include_directories(BluRendererVulkan PRIVATE ${Vulkan_INCLUDE_DIRS})
target_link_libraries(BluRendererVulkan PUBLIC ${Vulkan_LIBRARIES} glfw)

if (CMAKE_VERSION VERSION_GREATER 3.12)
  set_property(TARGET BluRendererVulkan PROPERTY CXX_STANDARD 20)
endif()