List of Goals:
Scene loading (sponza)
More Detailed Lighting + settings
-Dynamic Light Settings -> Hierarchy for selecting & disabling lights
[Reference BluEngine for pipeline create, so long as everything is preloaded] Returning to Asset Loading:
-Preloading all assets at runtime is the way.
-Dynamically Creating Pipelines is also the way
-Need some sort of caching and preferably one pipeline per mesh, not one per material
Reflection Probes -> Required for generating Irradiance maps different area's of the environment. They are selected by proximity
Rewrite shader

Environment Map->Reflection Texture (Generated from Reflection Probes)
BRDF Map->Roughness/Dot(Light Dir, Normal) Lookup table for -> output(0.1) Scale & Bias
Irradiance map->Diffuse lighting of environment (Generated from Environment Map)

TBD/Needs more Research/Not Worth implementing
Multi-thread (Secondary Command Buffers for ImGui) (Secondary command buffers working, multi threading would be trivial but would probably slow down performance with the thread pool overhead being not worth the saving the small workload in command buffer recording)

GPU Particles/Compute Pipeline
-Particle System Holder (Self contained, taking parameters) -Draw commands & buffer recording


AO (Baked Texture)
GTAO? HBAO? (PBR SSAO)(Dynamic Calculation)
GOOD LIGHTING!!!!! (Meaning: Supporting different light types with PBR)
GOD RAYS
Hardware Path Tracing
REIMPLEMENT INTO ENGINE!!!
Animations
Shadow Generation - Baking Shadows?
SMAA
Replace FXAA/PP pass with compute pass

Challenges
Compute Buffers allign with Double/Triple Buffering(Async) (Currently to test, Dispatch the ComputeShader and updaet once they are done)
Shader Cache

https://www.gdcvault.com/play/1012351/Uncharted-2-HDR
https://blog.selfshadow.com/publications/s2013-shading-course/karis/s2013_pbs_epic_notes_v2.pdf
https://www.researchgate.net/publication/215506032_Image-space_horizon-based_ambient_occlusion

Completed:
Fixed Lighting

Tomorrow: Priority-> GPU COMPUTE & Rendering Semaphores: GET IT WORKING FIRST, WORRY ABOUT PERFORMANCE AFTER (MULTIPLE DATA SETS?)

Next build(May 24th) will have:
More Settings in the UI & Fix UI(Currently doesn't capture Keyboard or scrollwheel input, also has strange window moving bug(check ImGUI_cond))
GPU based Particle System(COMPUTE GRAPHICS SYNC)
AA Settings & new AA implementation (Enable/Disable(clean/allocate required resources) Disabled, MSAA (4, 8 , 16?) & (FSAA?) + more in the future)


Post Processing, STAGES:
SKYBOX------------
MODELS------------
SSAO? (EARLY)
Tonemapping (LATE)
FXAA (LAST, BEFORE UI) - Optimized Integration:
Depending on the engine, there may be a performance advantage in merging FXAA
into an existing post processing pass. For example, the following can be done in a
single full screen pass: FXAA + composite bloom results + color grading + adding
film noise.
If the engine already has the ability to selectively apply post processing to only the
regions which need a given effect, anti-aliasing, and thus FXAA, is likely not needed
in areas under strong motion blur or depth of field
UI----------------

TODO: MOVE TONEMAPPING TO PP PASS

Future features include:
Reflection Probes 
GPU Focused Rendering
Deferred Rendering


Scene loading(Sponza)
- Auto pipeline creation
- New Shader*
- autoloading textures?



Setup: NON PBR

SETUP: GLTF SCENE
DONE:
COMMAND BUFFER BUILDING
TODO:

Pipeline Layouts
Pipelines
Shader/s?

STATIC?--------------
Descriptor Layouts
DYNAMIC?-------------


KNOWN PROBLEMS:
Add ImGui keyboard input
// TODO ORDER?
LIGHTS (Area works without shadows)
Generate IBL inside
INDEXING SHADOWMAP NOT WORKING
Shadows --------------------------------------------------------------
Realtime Ambient Occlusion(GTAO or HBAO)
Bloom?
MULTI THREADING
-MODEL LOADING-> glTF reading raw file is slow as square balls rolling up a hill
FIX FXAA _ TOO BLURRY


Multi-threaded Render API?


LIGHTS->
	COLOR
	zNear(Range? not sure) & zFar(Falloff)

GetIntensity()
	IF(length(LIGHTPOS - PIXELPOS) >  zFar) -> 0
	ELSE IF (length(LIGHTPOS - PIXELPOS) - 0.005 > shadowMap(xy)) NO SHADOW, CALC LIGHT FALLOFF?
	ELSE -> 0

ambient 


